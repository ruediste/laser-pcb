[{"/home/ruedi/git/laser-pcb/web/src/index.js":"1","/home/ruedi/git/laser-pcb/web/src/reportWebVitals.js":"2","/home/ruedi/git/laser-pcb/web/src/App.tsx":"3","/home/ruedi/git/laser-pcb/web/src/WithData.tsx":"4","/home/ruedi/git/laser-pcb/web/src/useData.ts":"5","/home/ruedi/git/laser-pcb/web/src/Profile.tsx":"6","/home/ruedi/git/laser-pcb/web/src/Process.tsx":"7"},{"size":505,"mtime":1611743802425,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1611431252073,"results":"10","hashOfConfig":"9"},{"size":1440,"mtime":1611744990916,"results":"11","hashOfConfig":"9"},{"size":732,"mtime":1612015182125,"results":"12","hashOfConfig":"9"},{"size":8674,"mtime":1612091178250,"results":"13","hashOfConfig":"9"},{"size":4327,"mtime":1611743072958,"results":"14","hashOfConfig":"9"},{"size":5014,"mtime":1612098277271,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"ralosu",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ruedi/git/laser-pcb/web/src/index.js",[],["33","34"],"/home/ruedi/git/laser-pcb/web/src/reportWebVitals.js",[],"/home/ruedi/git/laser-pcb/web/src/App.tsx",["35"],"import './App.css';\nimport React, { useEffect } from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link, useLocation\n} from 'react-router-dom';\nimport Profile from './Profile';\nimport Process from './Process';\nimport { ToastContainer } from 'react-toastify';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\ninterface NavEntry {\n  title: string;\n  path: string;\n  component: React.FunctionComponent\n}\n\nlet navEntries: NavEntry[] = [\n  { title: 'Profile', path: '/profile', component: Profile },\n  { title: 'Process', path: '/process', component: Process },\n];\n\nfunction Navigation() {\n  let location = useLocation();\n  return <Navbar bg=\"light\" expand=\"lg\">\n    <Navbar.Brand href=\"#home\">Laser PCB</Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    <Navbar.Collapse id=\"basic-navbar-nav\">\n      <Nav className=\"mr-auto\">\n        {navEntries.map((e, idx) => <Link key={idx} className={\"nav-link\" + (location.pathname === e.path ? \" active\" : \"\")} to={e.path}>{e.title}</Link>)}\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar>;\n}\n\nfunction App() {\n  return (\n    <Router>\n      <Navigation />\n      <Switch>\n        {navEntries.map((e, idx) =>\n          <Route key={idx} path={e.path}>\n            <e.component />\n          </Route>\n        )}\n      </Switch>\n      <ToastContainer hideProgressBar={true} />\n    </Router>\n  );\n}\n\nexport default App;\n",["36","37"],"/home/ruedi/git/laser-pcb/web/src/WithData.tsx",[],"/home/ruedi/git/laser-pcb/web/src/useData.ts",[],"/home/ruedi/git/laser-pcb/web/src/Profile.tsx",[],"/home/ruedi/git/laser-pcb/web/src/Process.tsx",["38"],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":2,"column":17,"nodeType":"45","messageId":"46","endLine":2,"endColumn":26},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"47","severity":1,"message":"48","line":36,"column":38,"nodeType":"49","endLine":36,"endColumn":130},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]